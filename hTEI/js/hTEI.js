// Generated by CoffeeScript 1.9.3
(function() {
  var run, url;

  url = $("#teiUrl").val();

  url = url.replace("https://raw.github.com", "https://rawgit.com");

  $("#loadTEI").submit(function(e) {
    e.preventDefault();
    url = $("#teiUrl").val();
    url = url.replace("https://raw.github.com", "https://rawgit.com");
    $("#TEI").html("");
    return run();
  });

  window.onerror = function(errorMsg, url, lineNumber) {
    $("#status").show();
    $("#status").html("Error occured: " + errorMsg);
    return false;
  };

  run = function() {
    $("#status").hide();
    TEIditto.addBehaviors;
    ({
      "line": "div"
    });
    return TEIditto.getHTML5(url, null, function(h5) {
      var left_margin_zones, main_zone;
      $("#TEI").html(h5);
      main_zone = $("tei-zone[type=main]");
      $("tei-line:has(tei-add[place=superlinear])").css("margin-top", ".5em");
      $("tei-line:has(tei-add[place=sublinear])").each(function(i, line) {
        var $line, add, adds, j, len, results;
        $line = $(line);
        $line.css("margin-bottom", ".5em");
        adds = $line.find("tei-add[place=sublinear]");
        results = [];
        for (i = j = 0, len = adds.length; j < len; i = ++j) {
          add = adds[i];
          if (adds[i - 1] != null) {
            results.push($(add).css("padding-left", $(adds[i - 1]).text().length + "em"));
          } else {
            results.push(void 0);
          }
        }
        return results;
      });
      $("tei-line:has(tei-add[place=superlinear])").each(function(i, line) {
        var $line, add, adds, j, len, results;
        $line = $(line);
        $line.css("margin-top", ".5em");
        adds = $line.find("tei-add[place=superlinear]");
        results = [];
        for (i = j = 0, len = adds.length; j < len; i = ++j) {
          add = adds[i];
          if (adds[i - 1] != null) {
            results.push($(add).css("padding-left", $(adds[i - 1]).text().length + "em"));
          } else {
            results.push(void 0);
          }
        }
        return results;
      });
      left_margin_zones = $("tei-zone[type=left_margin]");
      left_margin_zones.css("margin-top", main_zone.position().top);
      return left_margin_zones.each(function(i, lmz) {
        return $(lmz).css("top", (i * (100 / left_margin_zones.length)) + "%");
      });
    });
  };

  run();

}).call(this);
